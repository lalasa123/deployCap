{"ast":null,"code":"import _defineProperty from \"C:\\\\capabilityApp\\\\deployCap\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"C:\\\\capabilityApp\\\\deployCap\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\capabilityApp\\\\deployCap\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\capabilityApp\\\\deployCap\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\capabilityApp\\\\deployCap\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\capabilityApp\\\\deployCap\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\capabilityApp\\\\deployCap\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\capabilityApp\\\\deployCap\\\\src\\\\components\\\\questions\\\\questions.js\";\nimport React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport axios from 'axios';\nimport Menu from '../menu/menu';\nimport './questions.css';\nimport { Redirect } from 'react-router-dom';\n\nvar Questions =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Questions, _Component);\n\n  function Questions(props) {\n    var _this;\n\n    _classCallCheck(this, Questions);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Questions).call(this, props));\n\n    _this.handleTopic = function (e) {\n      alert(e); //    this.setState({\n      //     questionsRelatedTopic:e.target.value\n      //    })\n      //     console.log(this.state.questionsRelatedTopic);\n      // var input, filter, table, tr, td, i, txtValue;\n      // input = document.getElementById(\"myInput\");\n      // filter = input.value.toUpperCase();\n      // table = document.getElementById(\"tblQues\");\n      // tr = table.getElementsByTagName(\"tr\");\n      // for (i = 0; i < tr.length; i++) {\n      //   td = tr[i].getElementsByTagName(\"td\")[0];\n      //   if (td) {\n      //     txtValue = td.textContent || td.innerText;\n      //     if (txtValue.toUpperCase().indexOf(filter) > -1) {\n      //       tr[i].style.display = \"\";\n      //     } else {\n      //       tr[i].style.display = \"none\";\n      //     }\n      //   }       \n      // }\n\n      var topicData = e.target.value;\n      console.log(topicData);\n      axios.get(\"http://35.165.114.91:5000/questions/topicdetails/\".concat(topicData, \"/\")).then(function (res) {\n        console.log(res.data.topiclistques);\n\n        _this.setState({\n          questionsDatas: _toConsumableArray(res.data.topiclistques)\n        });\n      });\n    };\n\n    _this.state = {\n      isLoaded: false,\n      id: '',\n      questionsRelatedTopic: [],\n      error: false,\n      description: '',\n      questiontype_name: '',\n      questiontopic_name: '',\n      questioncomplexity_name: '',\n      complexDropdownData: [],\n      topicDropdownData: [],\n      status: 0,\n      Record: {\n        id: '',\n        description: '',\n        questiontopic_name: '',\n        questiontype_name: '',\n        questioncomplexity_name: '',\n        status: ''\n      },\n      questionsDatas: [],\n      currentElement: -1\n    };\n    return _this;\n  }\n\n  _createClass(Questions, [{\n    key: \"handleEdit\",\n    value: function handleEdit(data, id) {\n      var userId = data.id;\n      console.log(userId);\n      this.setState({\n        id: data.id,\n        description: data.description,\n        questiontopic_name: data.questiontopic_name,\n        questiontype_name: data.questiontype_name,\n        questioncomplexity_name: data.questioncomplexity_name,\n        currentElement: id\n      }); // this.props.history.push(\"/menu/questionsPage/${userId}\")\n      // this.props.history.push({\n      //     pathname: 'menu/editQuestions',\n      //     state: { userId: 'Put your url here '+userId }\n      //   })\n\n      this.props.history.push(\"/menu/editQuestions?id=\".concat(userId));\n    }\n  }, {\n    key: \"handleStatus\",\n    value: function handleStatus(data, status, index) {\n      //alert(data.status);\n      var dummyRecord = this.state.Record;\n      dummyRecord.id = data.id;\n      dummyRecord.description = data.description;\n      dummyRecord.questiontopic_name = data.questiontopic_name;\n      dummyRecord.questiontype_name = data.questiontype_name;\n      dummyRecord.questioncomplexity_name = data.questioncomplexity_name;\n      dummyRecord.status = data.status === 0 ? 1 : 0;\n      var dummytopicData = this.state.questionsDatas;\n      dummytopicData[index] = dummyRecord;\n      this.setState({\n        questionsDatas: dummytopicData,\n        status: data.status === 0 ? 1 : 0,\n        Record: {\n          id: '',\n          description: '',\n          questiontopic_name: '',\n          questiontype_name: '',\n          questioncomplexity_name: '',\n          status: ''\n        }\n      });\n    }\n  }, {\n    key: \"handleSave\",\n    value: function handleSave(index, data) {\n      var RecordDummy = this.state.Record;\n      RecordDummy.id = this.state.id;\n      RecordDummy.description = this.state.description;\n      RecordDummy.questiontopic_name = this.state.questiontopic_name;\n      RecordDummy.questiontype_name = this.state.questiontype_name;\n      RecordDummy.questioncomplexity_name = this.state.questioncomplexity_name;\n\n      if (RecordDummy.description === \"\" || RecordDummy.questiontype_name === \"\" || RecordDummy.questioncomplexity_name === \"\") {\n        this.setState({\n          error: true\n        });\n      } else {\n        RecordDummy.status = data.status;\n        var questionsDatasDummy = this.state.questionsDatas;\n        questionsDatasDummy[index] = RecordDummy; // Make a backend call with RecordDummy\n\n        this.setState(_defineProperty({\n          Record: RecordDummy,\n          questionsDatas: questionsDatasDummy,\n          currentElement: -1,\n          id: '',\n          description: '',\n          questiontopic_name: '',\n          questiontype_name: '',\n          questioncomplexity_name: ''\n        }, \"Record\", {\n          id: '',\n          description: '',\n          questiontopic_name: '',\n          questiontype_name: '',\n          questioncomplexity_name: ''\n        })); //alert(JSON.stringify(this.state.questionsDatas[index]));\n      }\n    }\n  }, {\n    key: \"handleQuetionName\",\n    value: function handleQuetionName(e) {\n      this.setState({\n        description: e.target.value\n      });\n    }\n  }, {\n    key: \"handleQuetionType\",\n    value: function handleQuetionType(e) {\n      this.setState({\n        questiontype_name: e.target.value\n      });\n    }\n  }, {\n    key: \"handleQuetionComplexity\",\n    value: function handleQuetionComplexity(e) {\n      this.setState({\n        questioncomplexity_name: e.target.value\n      });\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      if (localStorage.getItem('isLoggedIn') != null) {\n        axios.all([axios.get('http://35.165.114.91:5000/questions/getquestion/'), axios.get('http://35.165.114.91:5000/questions/complexity/'), axios.get('http://35.165.114.91:5000/questions/topic/')]).then(axios.spread(function (questionsDatas, complexDropdownData, topicData) {\n          // do something with both responses\n          _this2.setState({\n            questionsDatas: questionsDatas.data,\n            complexDropdownData: complexDropdownData.data,\n            topicDropdownData: topicData.data,\n            isLoaded: true\n          });\n        }));\n        var idData = this.props.location.search;\n        var idvalue = idData.split(\"?id=\");\n        var id = idvalue.slice(1, 3);\n        alert(id);\n        axios.get(\"http://35.165.114.91:5000/questions/topicdetails/\".concat(id, \"/\")).then(function (res) {\n          console.log(\"==========\" + res.data.topiclistques);\n\n          _this2.setState({\n            questionsDatas: _toConsumableArray(res.data.topiclistques)\n          });\n        });\n      }\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick() {\n      this.setState({\n        error: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (localStorage.getItem('isLoggedIn') === null) {\n        return React.createElement(Redirect, {\n          to: \"/login\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224\n          },\n          __self: this\n        }, React.createElement(Menu, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"side-content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226\n          },\n          __self: this\n        }, \"  \", React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227\n          },\n          __self: this\n        }, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 228\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          type: \"button\",\n          id: \"btn\",\n          value: \"add question\",\n          className: \"btn btn-primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229\n          },\n          __self: this\n        }, React.createElement(NavLink, {\n          to: \"/menu/questionsPage\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229\n          },\n          __self: this\n        }, \"Add Question\"))), React.createElement(\"div\", {\n          class: \"topicDrpdwn\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232\n          },\n          __self: this\n        }, React.createElement(\"select\", {\n          className: \"form-control\",\n          onChange: this.handleTopic,\n          id: \"myInput\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234\n          },\n          __self: this\n        }, \"--select--\"), this.state.topicDropdownData.map(function (drpTopicData) {\n          return React.createElement(\"option\", {\n            value: drpTopicData.name,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 237\n            },\n            __self: this\n          }, drpTopicData.name);\n        }))), React.createElement(\"div\", {\n          className: \"alert\",\n          style: {\n            display: this.state.error === true ? 'block' : 'none'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 245\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"closebtn\",\n          onClick: function onClick() {\n            _this3.handleClick();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246\n          },\n          __self: this\n        }, \"\\xD7\"), React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247\n          },\n          __self: this\n        }, \"Please Enter Details....\")), React.createElement(\"div\", {\n          className: \"image-container\",\n          style: {\n            display: this.state.isLoaded === false ? 'block' : 'none'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 250\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"image-holder\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 251\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: require('.././12345.gif'),\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 252\n          },\n          __self: this\n        }))), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 255\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"card\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 256\n          },\n          __self: this\n        }, \"  \", React.createElement(\"div\", {\n          className: \"card-body\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 257\n          },\n          __self: this\n        }, React.createElement(\"table\", {\n          id: \"tblQues\",\n          className: \"table\",\n          style: {\n            display: this.state.isLoaded === true ? 'inline-table' : 'none'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258\n          },\n          __self: this\n        }, React.createElement(\"thead\", {\n          className: \"thead-bg\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259\n          },\n          __self: this\n        }, React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 260\n          },\n          __self: this\n        }, React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 261\n          },\n          __self: this\n        }, \"Questions\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 261\n          },\n          __self: this\n        }, \"Topic\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 261\n          },\n          __self: this\n        }, \"Type\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262\n          },\n          __self: this\n        }, \"Complexity\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262\n          },\n          __self: this\n        }, \"Status\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262\n          },\n          __self: this\n        }, \"Action\"))), React.createElement(\"tbody\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 265\n          },\n          __self: this\n        }, console.log(\"---\" + this.state.questionsDatas), this.state.questionsDatas.map(function (questionsData, index) {\n          return React.createElement(\"tr\", {\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 268\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 270\n            },\n            __self: this\n          }, index === _this3.state.currentElement ? React.createElement(\"input\", {\n            type: \"text\",\n            class: \"form-control\",\n            onChange: function onChange(e) {\n              _this3.handleQuetionName(e);\n            },\n            defaultValue: questionsData.description,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 270\n            },\n            __self: this\n          }) : questionsData.description), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 271\n            },\n            __self: this\n          }, questionsData.questiontopic_name), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 272\n            },\n            __self: this\n          }, questionsData.questiontype_name), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 274\n            },\n            __self: this\n          }, React.createElement(\"select\", {\n            className: \"form-control\",\n            disabled: !(index === _this3.state.currentElement),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 275\n            },\n            __self: this\n          }, _this3.state.complexDropdownData.map(function (drpData, index) {\n            return React.createElement(\"option\", {\n              key: index,\n              selected: drpData.name === questionsData.questioncomplexity_name,\n              value: drpData.name === questionsData.questioncomplexity_name ? true : false,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 279\n              },\n              __self: this\n            }, drpData.name);\n          }))), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 286\n            },\n            __self: this\n          }, React.createElement(\"label\", {\n            className: \"switch\",\n            id: \"status\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 287\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            type: \"checkbox\",\n            checked: questionsData.status === 1 ? true : false,\n            disabled: _this3.state.currentElement === index ? false : true,\n            onChange: function onChange() {\n              return _this3.handleStatus(questionsData, questionsData.status, index);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 288\n            },\n            __self: this\n          }), React.createElement(\"span\", {\n            className: \"slider round\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 289\n            },\n            __self: this\n          }))), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 293\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 294\n            },\n            __self: this\n          }, \"  \", index === _this3.state.currentElement ? React.createElement(\"svg\", {\n            onClick: function onClick() {\n              _this3.handleSave(index, questionsData);\n            },\n            xmlns: \"http://www.w3.org/2000/svg\",\n            width: \"30\",\n            height: \"30\",\n            viewBox: \"0 0 18 18\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 294\n            },\n            __self: this\n          }, React.createElement(\"path\", {\n            d: \"M6.61 11.89L3.5 8.78 2.44 9.84 6.61 14l8.95-8.95L14.5 4z\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 294\n            },\n            __self: this\n          })) : React.createElement(\"svg\", {\n            onClick: function onClick() {\n              _this3.handleEdit(questionsData, index);\n            },\n            xmlns: \"http://www.w3.org/2000/svg\",\n            width: \"24\",\n            height: \"24\",\n            viewBox: \"0 0 24 24\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 294\n            },\n            __self: this\n          }, React.createElement(\"path\", {\n            d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 294\n            },\n            __self: this\n          })))));\n        })))))));\n      }\n    }\n  }]);\n\n  return Questions;\n}(Component);\n\nexport default Questions;","map":{"version":3,"sources":["C:\\capabilityApp\\deployCap\\src\\components\\questions\\questions.js"],"names":["React","Component","NavLink","axios","Menu","Redirect","Questions","props","handleTopic","e","alert","topicData","target","value","console","log","get","then","res","data","topiclistques","setState","questionsDatas","state","isLoaded","id","questionsRelatedTopic","error","description","questiontype_name","questiontopic_name","questioncomplexity_name","complexDropdownData","topicDropdownData","status","Record","currentElement","userId","history","push","index","dummyRecord","dummytopicData","RecordDummy","questionsDatasDummy","localStorage","getItem","all","spread","idData","location","search","idvalue","split","slice","map","drpTopicData","name","display","handleClick","require","questionsData","handleQuetionName","drpData","handleStatus","handleSave","handleEdit"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Menu from '../menu/menu';\r\nimport './questions.css';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nclass Questions extends Component {\r\nconstructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isLoaded:false,\r\n            id:'',\r\n            questionsRelatedTopic:[],\r\n             error:false,\r\n            description: '',\r\n            questiontype_name: '',\r\n            questiontopic_name:'',\r\n            questioncomplexity_name: '',\r\n            complexDropdownData:[],\r\n            topicDropdownData:[],\r\n            status:0,\r\n            Record: {\r\n                id: '',\r\n                description: '',\r\n                questiontopic_name:'',\r\n                questiontype_name: '',\r\n                questioncomplexity_name: '',\r\n                status: ''\r\n            },\r\n            questionsDatas: [],\r\n            currentElement: -1,\r\n        }\r\n     \r\n    }\r\n    handleEdit(data, id) {\r\n        const userId=data.id;\r\n        console.log(userId)\r\n        this.setState({\r\n            id: data.id,\r\n            description: data.description,\r\n            questiontopic_name:data.questiontopic_name,\r\n            questiontype_name: data. questiontype_name,\r\n            questioncomplexity_name: data.questioncomplexity_name,\r\n            currentElement: id\r\n        })\r\n       // this.props.history.push(\"/menu/questionsPage/${userId}\")\r\n\r\n        // this.props.history.push({\r\n        //     pathname: 'menu/editQuestions',\r\n        //     state: { userId: 'Put your url here '+userId }\r\n        //   })\r\n        this.props.history.push(`/menu/editQuestions?id=${userId}`)\r\n    }\r\n\r\n    handleStatus(data, status, index) {\r\n//alert(data.status);\r\n        const dummyRecord = this.state.Record;\r\n      \r\n        dummyRecord.id = data.id;\r\n        dummyRecord.description = data.description;\r\n        dummyRecord.questiontopic_name=data.questiontopic_name;        \r\n        dummyRecord. questiontype_name = data. questiontype_name;\r\n        dummyRecord.questioncomplexity_name = data.questioncomplexity_name;\r\n        dummyRecord.status = data.status === 0 ? 1 : 0;\r\n      \r\n        const dummytopicData = this.state.questionsDatas;\r\n        dummytopicData[index] = dummyRecord;\r\n        this.setState({\r\n            questionsDatas: dummytopicData,\r\n            status:data.status === 0 ? 1 : 0,\r\n            Record:{\r\n                id: '',\r\n                description: '',\r\n                questiontopic_name:'',\r\n                questiontype_name: '',\r\n                questioncomplexity_name: '',\r\n                status: ''\r\n            }\r\n      \r\n        });\r\n      }\r\n\r\n    handleSave(index,data) {\r\n        var RecordDummy = this.state.Record;\r\n        RecordDummy.id = this.state.id;\r\n        RecordDummy.description = this.state.description;\r\n        RecordDummy.questiontopic_name=this.state.questiontopic_name;\r\n        RecordDummy.questiontype_name = this.state.questiontype_name;\r\n        RecordDummy.questioncomplexity_name = this.state.questioncomplexity_name;\r\n        if( RecordDummy.description === \"\" ||  RecordDummy.questiontype_name === \"\" ||  RecordDummy.questioncomplexity_name ===\"\"){\r\n            this.setState({\r\n              error:true\r\n            })\r\n          }\r\n          else{\r\n        RecordDummy.status = data.status;\r\n        var questionsDatasDummy = this.state.questionsDatas;\r\n        questionsDatasDummy[index] = RecordDummy;\r\n        // Make a backend call with RecordDummy\r\n        this.setState({\r\n            Record: RecordDummy,\r\n            questionsDatas: questionsDatasDummy,\r\n            currentElement: -1,\r\n            id: '',\r\n            description: '',\r\n            questiontopic_name:'',\r\n            questiontype_name: '',\r\n            questioncomplexity_name: '',\r\n            Record: {\r\n                id: '',\r\n                description: '',\r\n                questiontopic_name:'',\r\n                questiontype_name: '',\r\n                questioncomplexity_name: ''\r\n            }\r\n        })\r\n        //alert(JSON.stringify(this.state.questionsDatas[index]));\r\n    }\r\n    }\r\n    handleQuetionName(e) {\r\n        this.setState({\r\n            description: e.target.value\r\n        });\r\n    }\r\n\r\n    handleQuetionType(e) {\r\n        this.setState({\r\n            questiontype_name: e.target.value\r\n        });\r\n    }\r\n    handle\r\n\r\n    handleQuetionComplexity(e) {\r\n        this.setState({\r\n            questioncomplexity_name: e.target.value\r\n        });\r\n    }\r\n    componentWillMount() {\r\n        if (localStorage.getItem('isLoggedIn') != null) {\r\n        axios.all([\r\n        axios.get('http://35.165.114.91:5000/questions/getquestion/'),\r\n        axios.get('http://35.165.114.91:5000/questions/complexity/'),\r\n        axios.get('http://35.165.114.91:5000/questions/topic/')\r\n      ])\r\n      .then(axios.spread((questionsDatas, complexDropdownData,topicData) => {\r\n        // do something with both responses\r\n        \r\n        this.setState({\r\n                        questionsDatas: questionsDatas.data,\r\n                        complexDropdownData: complexDropdownData.data,\r\n                        topicDropdownData:topicData.data,\r\n                      isLoaded:true\r\n                    })\r\n      }))\r\n      const idData=this.props.location.search;\r\n            var idvalue =  idData.split(\"?id=\");  \r\n            var id = idvalue.slice(1, 3);\r\n            alert(id);\r\n            axios.get(`http://35.165.114.91:5000/questions/topicdetails/${id}/`)\r\n \r\n            .then(res=>{\r\n                \r\n                console.log(\"==========\"+res.data.topiclistques)\r\n                this.setState({\r\n                   questionsDatas:[...res.data.topiclistques]\r\n               })\r\n            }) \r\n    }\r\n\r\n      \r\n        }\r\n        \r\n\r\n      handleClick(){\r\n        this.setState({\r\n            error:false\r\n        })\r\n}\r\nhandleTopic=(e)=>{\r\n    alert(e);\r\n        //    this.setState({\r\n        //     questionsRelatedTopic:e.target.value\r\n        //    })\r\n        //     console.log(this.state.questionsRelatedTopic);\r\n        // var input, filter, table, tr, td, i, txtValue;\r\n        // input = document.getElementById(\"myInput\");\r\n        // filter = input.value.toUpperCase();\r\n        // table = document.getElementById(\"tblQues\");\r\n        // tr = table.getElementsByTagName(\"tr\");\r\n        // for (i = 0; i < tr.length; i++) {\r\n        //   td = tr[i].getElementsByTagName(\"td\")[0];\r\n        //   if (td) {\r\n        //     txtValue = td.textContent || td.innerText;\r\n        //     if (txtValue.toUpperCase().indexOf(filter) > -1) {\r\n        //       tr[i].style.display = \"\";\r\n        //     } else {\r\n        //       tr[i].style.display = \"none\";\r\n        //     }\r\n        //   }       \r\n        // }\r\n\r\n           const topicData=e.target.value\r\n           console.log(topicData);\r\n axios.get(`http://35.165.114.91:5000/questions/topicdetails/${topicData}/`)\r\n \r\n             .then(res=>{\r\n                 \r\n                 console.log(res.data.topiclistques)\r\n                 this.setState({\r\n                    questionsDatas:[...res.data.topiclistques]\r\n                })\r\n             })              \r\n \r\n}\r\n\r\n    render() {\r\n        if (localStorage.getItem('isLoggedIn') === null) {\r\n            return <Redirect to='/login' />\r\n          }\r\n          else{ \r\n        return (\r\n            \r\n            <div>\r\n                <Menu />\r\n                <div className=\"side-content\">  {/* padding left and right */}\r\n                <div>\r\n                    <br />\r\n                    <button type=\"button\" id=\"btn\" value=\"add question\" className=\"btn btn-primary\" ><NavLink to='/menu/questionsPage'>Add Question</NavLink></button>\r\n                </div>\r\n               \r\n         <div class=\"topicDrpdwn\">\r\n         <select className=\"form-control\" onChange={this.handleTopic}  id=\"myInput\">\r\n         <option>--select--</option>\r\n    {this.state.topicDropdownData.map(drpTopicData =>{\r\n        return(\r\n                <option value={drpTopicData.name}>{ drpTopicData.name}</option>\r\n               )\r\n            })} \r\n       \r\n       </select> \r\n       </div>\r\n                   \r\n               \r\n                <div className=\"alert\" style={{display: this.state.error === true ? 'block':'none'}}>\r\n                    <span className=\"closebtn\" onClick={()=>{this.handleClick()}}>&times;</span>\r\n                    <strong>Please Enter Details....</strong>\r\n                  </div>\r\n      \r\n                <div className=\"image-container\" style={{ display: this.state.isLoaded === false ? 'block' : 'none' }}>\r\n          <p className=\"image-holder\">\r\n            <img  src={require('.././12345.gif')}  alt=\"\"/>\r\n          </p>\r\n        </div>\r\n        <br />\r\n        <div className=\"card\">  {/*  Bootstrap cards  */}\r\n        <div className=\"card-body\">\r\n                    <table id=\"tblQues\" className=\"table\" style={{display: this.state.isLoaded === true ? 'inline-table' : 'none'}} >\r\n                        <thead className=\"thead-bg\">\r\n                            <tr>\r\n                                <th>Questions</th><th>Topic</th><th>Type</th>\r\n                                <th>Complexity</th><th>Status</th><th>Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {console.log(\"---\"+this.state.questionsDatas)}\r\n                            {this.state.questionsDatas.map((questionsData,index) => {\r\n                                return <tr key={index}>\r\n                                    {/* <td>{questionsData.url.split('/')[5]}</td> */}\r\n                                    <td >{index === this.state.currentElement ? <input type='text' class=\"form-control\" onChange={(e) => { this.handleQuetionName(e) }} defaultValue={questionsData.description} /> : questionsData.description}</td>\r\n                                    <td>{questionsData.questiontopic_name}</td>\r\n                                    <td>{questionsData.questiontype_name}</td>\r\n\r\n     <td>\r\n    <select className=\"form-control\" disabled={!(index === this.state.currentElement)}>\r\n    {this.state.complexDropdownData.map((drpData,index)=>{\r\n      \r\n               return(\r\n                <option key={index} selected={drpData.name === questionsData.questioncomplexity_name} value={drpData.name === questionsData.questioncomplexity_name ? true : false}>{ drpData.name}</option>\r\n               )\r\n            \r\n       })}</select>\r\n    </td>\r\n\r\n                                    {/* <td>{index === this.state.currentElement ? <input type='text' class=\"form-control\" onChange={(e) => { this.handleQuetionComplexity(e) }} defaultValue={questionsData.questioncomplexity_name} /> : questionsData.questioncomplexity_name}</td> */}\r\n                                    <td>\r\n                                        <label className=\"switch\" id=\"status\">\r\n                                            <input type=\"checkbox\" checked={questionsData.status=== 1 ? true : false} disabled = {this.state.currentElement === index?false:true} onChange={() => this.handleStatus(questionsData, questionsData.status, index)} />\r\n                                            <span className=\"slider round\"></span>\r\n                                        </label>\r\n                                    </td> \r\n                                    {/* <td><label class=\"switch\" id=\"status\"><input type=\"checkbox\" /><span class=\"slider round\"></span></label></td> */}\r\n                                    <td>\r\n                                        <div >  {index === this.state.currentElement ? <svg onClick={() => { this.handleSave(index,questionsData) }} xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\" viewBox=\"0 0 18 18\"><path d=\"M6.61 11.89L3.5 8.78 2.44 9.84 6.61 14l8.95-8.95L14.5 4z\" /></svg> : <svg onClick={() => { this.handleEdit(questionsData, index) }} xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\" /></svg>}</div>\r\n                                    </td>\r\n                                </tr>\r\n                            })}\r\n                        </tbody>\r\n                                            </table>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n  }\r\n}\r\nexport default Questions;"]},"metadata":{},"sourceType":"module"}