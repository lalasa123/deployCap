{"ast":null,"code":"import _defineProperty from \"F:\\\\React JS\\\\ReactJS\\\\capability\\\\capability25\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"F:\\\\React JS\\\\ReactJS\\\\capability\\\\capability25\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\React JS\\\\ReactJS\\\\capability\\\\capability25\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\React JS\\\\ReactJS\\\\capability\\\\capability25\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\React JS\\\\ReactJS\\\\capability\\\\capability25\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\React JS\\\\ReactJS\\\\capability\\\\capability25\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"F:\\\\React JS\\\\ReactJS\\\\capability\\\\capability25\\\\src\\\\components\\\\questions\\\\questions.js\";\nimport React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport axios from 'axios';\nimport Menu from '../menu/menu';\nimport './questions.css';\nimport { Redirect } from 'react-router-dom';\n\nvar Questions =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Questions, _Component);\n\n  function Questions(props) {\n    var _this;\n\n    _classCallCheck(this, Questions);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Questions).call(this, props));\n\n    _this.handleTopic = function (e) {\n      _this.setState({\n        questionsRelatedTopic: e.target.value\n      });\n\n      console.log(_this.state.questionsRelatedTopic);\n      var topicData = _this.state.questionsRelatedTopic;\n      axios.get(\"http://127.0.0.1:8000/questions/topicdetails/\".concat(e.target.value, \"/\")).then(function (res) {\n        console.log(res.data);\n      });\n    };\n\n    _this.state = {\n      isLoaded: false,\n      id: '',\n      questionsRelatedTopic: '',\n      error: false,\n      description: '',\n      questiontype_name: '',\n      questiontopic_name: '',\n      questioncomplexity_name: '',\n      complexDropdownData: [],\n      topicDropdownData: [],\n      status: 0,\n      Record: {\n        id: '',\n        description: '',\n        questiontopic_name: '',\n        questiontype_name: '',\n        questioncomplexity_name: '',\n        status: ''\n      },\n      questionsDatas: [],\n      currentElement: -1\n    };\n    return _this;\n  }\n\n  _createClass(Questions, [{\n    key: \"handleEdit\",\n    value: function handleEdit(data, id) {\n      this.setState({\n        id: data.id,\n        description: data.description,\n        questiontopic_name: data.questiontopic_name,\n        questiontype_name: data.questiontype_name,\n        questioncomplexity_name: data.questioncomplexity_name,\n        currentElement: id\n      });\n    }\n  }, {\n    key: \"handleStatus\",\n    value: function handleStatus(data, status, index) {\n      //alert(data.status);\n      var dummyRecord = this.state.Record;\n      dummyRecord.id = data.id;\n      dummyRecord.description = data.description;\n      dummyRecord.questiontopic_name = data.questiontopic_name;\n      dummyRecord.questiontype_name = data.questiontype_name;\n      dummyRecord.questioncomplexity_name = data.questioncomplexity_name;\n      dummyRecord.status = data.status === 0 ? 1 : 0;\n      var dummytopicData = this.state.questionsDatas;\n      dummytopicData[index] = dummyRecord;\n      this.setState({\n        questionsDatas: dummytopicData,\n        status: data.status === 0 ? 1 : 0,\n        Record: {\n          id: '',\n          description: '',\n          questiontopic_name: '',\n          questiontype_name: '',\n          questioncomplexity_name: '',\n          status: ''\n        }\n      });\n    }\n  }, {\n    key: \"handleSave\",\n    value: function handleSave(index, data) {\n      var RecordDummy = this.state.Record;\n      RecordDummy.id = this.state.id;\n      RecordDummy.description = this.state.description;\n      RecordDummy.questiontopic_name = this.state.questiontopic_name;\n      RecordDummy.questiontype_name = this.state.questiontype_name;\n      RecordDummy.questioncomplexity_name = this.state.questioncomplexity_name;\n\n      if (RecordDummy.description === \"\" || RecordDummy.questiontype_name === \"\" || RecordDummy.questioncomplexity_name === \"\") {\n        this.setState({\n          error: true\n        });\n      } else {\n        RecordDummy.status = data.status;\n        var questionsDatasDummy = this.state.questionsDatas;\n        questionsDatasDummy[index] = RecordDummy; // Make a backend call with RecordDummy\n\n        this.setState(_defineProperty({\n          Record: RecordDummy,\n          questionsDatas: questionsDatasDummy,\n          currentElement: -1,\n          id: '',\n          description: '',\n          questiontopic_name: '',\n          questiontype_name: '',\n          questioncomplexity_name: ''\n        }, \"Record\", {\n          id: '',\n          description: '',\n          questiontopic_name: '',\n          questiontype_name: '',\n          questioncomplexity_name: ''\n        })); //alert(JSON.stringify(this.state.questionsDatas[index]));\n      }\n    }\n  }, {\n    key: \"handleQuetionName\",\n    value: function handleQuetionName(e) {\n      this.setState({\n        description: e.target.value\n      });\n    }\n  }, {\n    key: \"handleQuetionType\",\n    value: function handleQuetionType(e) {\n      this.setState({\n        questiontype_name: e.target.value\n      });\n    }\n  }, {\n    key: \"handleQuetionComplexity\",\n    value: function handleQuetionComplexity(e) {\n      this.setState({\n        questioncomplexity_name: e.target.value\n      });\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      if (localStorage.getItem('isLoggedIn') != null) {\n        axios.all([axios.get('http://127.0.0.1:8000/questions/getquestion/'), axios.get('http://127.0.0.1:8000/questions/complexity/'), axios.get('http://127.0.0.1:8000/questions/topic/')]).then(axios.spread(function (questionsDatas, complexDropdownData, topicData) {\n          // do something with both responses\n          _this2.setState({\n            questionsDatas: questionsDatas.data,\n            complexDropdownData: complexDropdownData.data,\n            topicDropdownData: topicData.data,\n            isLoaded: true\n          });\n        }));\n      }\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick() {\n      this.setState({\n        error: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (localStorage.getItem('isLoggedIn') === null) {\n        return React.createElement(Redirect, {\n          to: \"/login\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177\n          },\n          __self: this\n        }, React.createElement(Menu, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"side-content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179\n          },\n          __self: this\n        }, \"  \", React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180\n          },\n          __self: this\n        }, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          type: \"button\",\n          id: \"btn\",\n          value: \"add question\",\n          className: \"btn btn-primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          },\n          __self: this\n        }, React.createElement(NavLink, {\n          to: \"/menu/questionsPage\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          },\n          __self: this\n        }, \"Add Question\"))), React.createElement(\"div\", {\n          class: \"topicDrpdwn\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          },\n          __self: this\n        }, React.createElement(\"select\", {\n          className: \"form-control\",\n          onChange: this.handleTopic,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        }, \"--select--\"), this.state.topicDropdownData.map(function (drpTopicData) {\n          return React.createElement(\"option\", {\n            value: drpTopicData.name,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 190\n            },\n            __self: this\n          }, drpTopicData.acronym);\n        }))), React.createElement(\"div\", {\n          className: \"alert\",\n          style: {\n            display: this.state.error === true ? 'block' : 'none'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"closebtn\",\n          onClick: function onClick() {\n            _this3.handleClick();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199\n          },\n          __self: this\n        }, \"\\xD7\"), React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200\n          },\n          __self: this\n        }, \"Please Enter Details....\")), React.createElement(\"div\", {\n          className: \"image-container\",\n          style: {\n            display: this.state.isLoaded === false ? 'block' : 'none'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"image-holder\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: require('.././12345.gif'),\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205\n          },\n          __self: this\n        }))), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"card\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209\n          },\n          __self: this\n        }, \"  \", React.createElement(\"div\", {\n          className: \"card-body\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210\n          },\n          __self: this\n        }, React.createElement(\"table\", {\n          id: \"tblQues\",\n          className: \"table\",\n          style: {\n            display: this.state.isLoaded === true ? 'inline-table' : 'none'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          },\n          __self: this\n        }, React.createElement(\"thead\", {\n          className: \"thead-bg\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212\n          },\n          __self: this\n        }, React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213\n          },\n          __self: this\n        }, React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214\n          },\n          __self: this\n        }, \"S.No\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214\n          },\n          __self: this\n        }, \"Questions\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214\n          },\n          __self: this\n        }, \"Topic\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214\n          },\n          __self: this\n        }, \"Type\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215\n          },\n          __self: this\n        }, \"Complexity\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215\n          },\n          __self: this\n        }, \"Status\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215\n          },\n          __self: this\n        }, \"Action\"))), React.createElement(\"tbody\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218\n          },\n          __self: this\n        }, this.state.questionsDatas.map(function (questionsData, index) {\n          return React.createElement(\"tr\", {\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 220\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 222\n            },\n            __self: this\n          }, questionsData.id), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 223\n            },\n            __self: this\n          }, index === _this3.state.currentElement ? React.createElement(\"input\", {\n            type: \"text\",\n            class: \"form-control\",\n            onChange: function onChange(e) {\n              _this3.handleQuetionName(e);\n            },\n            defaultValue: questionsData.description,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 223\n            },\n            __self: this\n          }) : questionsData.description), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 224\n            },\n            __self: this\n          }, questionsData.questiontopic_name), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 225\n            },\n            __self: this\n          }, questionsData.questiontype_name), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 227\n            },\n            __self: this\n          }, React.createElement(\"select\", {\n            className: \"form-control\",\n            disabled: !(index === _this3.state.currentElement),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 228\n            },\n            __self: this\n          }, _this3.state.complexDropdownData.map(function (drpData, index) {\n            return React.createElement(\"option\", {\n              key: index,\n              selected: drpData.name === questionsData.questioncomplexity_name,\n              value: drpData.name === questionsData.questioncomplexity_name ? true : false,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 232\n              },\n              __self: this\n            }, drpData.name);\n          }))), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 239\n            },\n            __self: this\n          }, React.createElement(\"label\", {\n            className: \"switch\",\n            id: \"status\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 240\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            type: \"checkbox\",\n            checked: questionsData.status === 1 ? true : false,\n            disabled: _this3.state.currentElement === index ? false : true,\n            onChange: function onChange() {\n              return _this3.handleStatus(questionsData, questionsData.status, index);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 241\n            },\n            __self: this\n          }), React.createElement(\"span\", {\n            className: \"slider round\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 242\n            },\n            __self: this\n          }))), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 246\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 247\n            },\n            __self: this\n          }, \"  \", index === _this3.state.currentElement ? React.createElement(\"svg\", {\n            onClick: function onClick() {\n              _this3.handleSave(index, questionsData);\n            },\n            xmlns: \"http://www.w3.org/2000/svg\",\n            width: \"30\",\n            height: \"30\",\n            viewBox: \"0 0 18 18\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 247\n            },\n            __self: this\n          }, React.createElement(\"path\", {\n            d: \"M6.61 11.89L3.5 8.78 2.44 9.84 6.61 14l8.95-8.95L14.5 4z\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 247\n            },\n            __self: this\n          })) : React.createElement(\"svg\", {\n            onClick: function onClick() {\n              _this3.handleEdit(questionsData, index);\n            },\n            xmlns: \"http://www.w3.org/2000/svg\",\n            width: \"24\",\n            height: \"24\",\n            viewBox: \"0 0 24 24\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 247\n            },\n            __self: this\n          }, React.createElement(\"path\", {\n            d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 247\n            },\n            __self: this\n          })))));\n        })))))));\n      }\n    }\n  }]);\n\n  return Questions;\n}(Component);\n\nexport default Questions;","map":{"version":3,"sources":["F:\\React JS\\ReactJS\\capability\\capability25\\src\\components\\questions\\questions.js"],"names":["React","Component","NavLink","axios","Menu","Redirect","Questions","props","handleTopic","e","setState","questionsRelatedTopic","target","value","console","log","state","topicData","get","then","res","data","isLoaded","id","error","description","questiontype_name","questiontopic_name","questioncomplexity_name","complexDropdownData","topicDropdownData","status","Record","questionsDatas","currentElement","index","dummyRecord","dummytopicData","RecordDummy","questionsDatasDummy","localStorage","getItem","all","spread","map","drpTopicData","name","acronym","display","handleClick","require","questionsData","handleQuetionName","drpData","handleStatus","handleSave","handleEdit"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Menu from '../menu/menu';\r\nimport './questions.css';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nclass Questions extends Component {\r\nconstructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isLoaded:false,\r\n            id:'',\r\n            questionsRelatedTopic:'',\r\n             error:false,\r\n            description: '',\r\n            questiontype_name: '',\r\n            questiontopic_name:'',\r\n            questioncomplexity_name: '',\r\n            complexDropdownData:[],\r\n            topicDropdownData:[],\r\n            status:0,\r\n            Record: {\r\n                id: '',\r\n                description: '',\r\n                questiontopic_name:'',\r\n                questiontype_name: '',\r\n                questioncomplexity_name: '',\r\n                status: ''\r\n            },\r\n            questionsDatas: [],\r\n            currentElement: -1,\r\n        }\r\n     \r\n    }\r\n    handleEdit(data, id) {\r\n        this.setState({\r\n            id: data.id,\r\n            description: data.description,\r\n            questiontopic_name:data.questiontopic_name,\r\n            questiontype_name: data. questiontype_name,\r\n            questioncomplexity_name: data.questioncomplexity_name,\r\n            currentElement: id\r\n        })\r\n    }\r\n\r\n    handleStatus(data, status, index) {\r\n//alert(data.status);\r\n        const dummyRecord = this.state.Record;\r\n      \r\n        dummyRecord.id = data.id;\r\n        dummyRecord.description = data.description;\r\n        dummyRecord.questiontopic_name=data.questiontopic_name;        \r\n        dummyRecord. questiontype_name = data. questiontype_name;\r\n        dummyRecord.questioncomplexity_name = data.questioncomplexity_name;\r\n        dummyRecord.status = data.status === 0 ? 1 : 0;\r\n      \r\n        const dummytopicData = this.state.questionsDatas;\r\n        dummytopicData[index] = dummyRecord;\r\n        this.setState({\r\n            questionsDatas: dummytopicData,\r\n            status:data.status === 0 ? 1 : 0,\r\n            Record:{\r\n                id: '',\r\n                description: '',\r\n                questiontopic_name:'',\r\n                questiontype_name: '',\r\n                questioncomplexity_name: '',\r\n                status: ''\r\n            }\r\n      \r\n        });\r\n      }\r\n\r\n    handleSave(index,data) {\r\n        var RecordDummy = this.state.Record;\r\n        RecordDummy.id = this.state.id;\r\n        RecordDummy.description = this.state.description;\r\n        RecordDummy.questiontopic_name=this.state.questiontopic_name;\r\n        RecordDummy.questiontype_name = this.state.questiontype_name;\r\n        RecordDummy.questioncomplexity_name = this.state.questioncomplexity_name;\r\n        if( RecordDummy.description === \"\" ||  RecordDummy.questiontype_name === \"\" ||  RecordDummy.questioncomplexity_name ===\"\"){\r\n            this.setState({\r\n              error:true\r\n            })\r\n          }\r\n          else{\r\n        RecordDummy.status = data.status;\r\n        var questionsDatasDummy = this.state.questionsDatas;\r\n        questionsDatasDummy[index] = RecordDummy;\r\n        // Make a backend call with RecordDummy\r\n        this.setState({\r\n            Record: RecordDummy,\r\n            questionsDatas: questionsDatasDummy,\r\n            currentElement: -1,\r\n            id: '',\r\n            description: '',\r\n            questiontopic_name:'',\r\n            questiontype_name: '',\r\n            questioncomplexity_name: '',\r\n            Record: {\r\n                id: '',\r\n                description: '',\r\n                questiontopic_name:'',\r\n                questiontype_name: '',\r\n                questioncomplexity_name: ''\r\n            }\r\n        })\r\n        //alert(JSON.stringify(this.state.questionsDatas[index]));\r\n    }\r\n    }\r\n    handleQuetionName(e) {\r\n        this.setState({\r\n            description: e.target.value\r\n        });\r\n    }\r\n\r\n    handleQuetionType(e) {\r\n        this.setState({\r\n            questiontype_name: e.target.value\r\n        });\r\n    }\r\n    handle\r\n\r\n    handleQuetionComplexity(e) {\r\n        this.setState({\r\n            questioncomplexity_name: e.target.value\r\n        });\r\n    }\r\n    componentWillMount() {\r\n        if (localStorage.getItem('isLoggedIn') != null) {\r\n        axios.all([\r\n        axios.get('http://127.0.0.1:8000/questions/getquestion/'),\r\n        axios.get('http://127.0.0.1:8000/questions/complexity/'),\r\n        axios.get('http://127.0.0.1:8000/questions/topic/')\r\n      ])\r\n      .then(axios.spread((questionsDatas, complexDropdownData,topicData) => {\r\n        // do something with both responses\r\n        \r\n        this.setState({\r\n                        questionsDatas: questionsDatas.data,\r\n                        complexDropdownData: complexDropdownData.data,\r\n                        topicDropdownData:topicData.data,\r\n                      isLoaded:true\r\n                    })\r\n      }))\r\n     \r\n    }\r\n        }\r\n      handleClick(){\r\n        this.setState({\r\n            error:false\r\n        })\r\n}\r\nhandleTopic=(e)=>{\r\n           this.setState({\r\n            questionsRelatedTopic:e.target.value\r\n           })\r\n            console.log(this.state.questionsRelatedTopic);\r\n            const topicData=this.state.questionsRelatedTopic;\r\n axios.get(`http://127.0.0.1:8000/questions/topicdetails/${e.target.value}/`)\r\n \r\n             .then(res=>{\r\n                 console.log(res.data)\r\n             })   \r\n              \r\n       \r\n}\r\n\r\n    render() {\r\n        if (localStorage.getItem('isLoggedIn') === null) {\r\n            return <Redirect to='/login' />\r\n          }\r\n          else{ \r\n        return (\r\n            \r\n            <div>\r\n                <Menu />\r\n                <div className=\"side-content\">  {/* padding left and right */}\r\n                <div>\r\n                    <br />\r\n                    <button type=\"button\" id=\"btn\" value=\"add question\" className=\"btn btn-primary\" ><NavLink to='/menu/questionsPage'>Add Question</NavLink></button>\r\n                </div>\r\n               \r\n         <div class=\"topicDrpdwn\">\r\n         <select className=\"form-control\" onChange={this.handleTopic} >\r\n         <option>--select--</option>\r\n    {this.state.topicDropdownData.map(drpTopicData =>{\r\n        return(\r\n                <option value={drpTopicData.name}>{ drpTopicData.acronym}</option>\r\n               )\r\n            })} \r\n       \r\n       </select> \r\n       </div>\r\n                   \r\n               \r\n                <div className=\"alert\" style={{display: this.state.error === true ? 'block':'none'}}>\r\n                    <span className=\"closebtn\" onClick={()=>{this.handleClick()}}>&times;</span>\r\n                    <strong>Please Enter Details....</strong>\r\n                  </div>\r\n      \r\n                <div className=\"image-container\" style={{ display: this.state.isLoaded === false ? 'block' : 'none' }}>\r\n          <p className=\"image-holder\">\r\n            <img  src={require('.././12345.gif')}  alt=\"\"/>\r\n          </p>\r\n        </div>\r\n        <br />\r\n        <div className=\"card\">  {/*  Bootstrap cards  */}\r\n        <div className=\"card-body\">\r\n                    <table id=\"tblQues\" className=\"table\" style={{display: this.state.isLoaded === true ? 'inline-table' : 'none'}} >\r\n                        <thead className=\"thead-bg\">\r\n                            <tr>\r\n                                <th>S.No</th><th>Questions</th><th>Topic</th><th>Type</th>\r\n                                <th>Complexity</th><th>Status</th><th>Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.state.questionsDatas.map((questionsData,index) => {\r\n                                return <tr key={index}>\r\n                                    {/* <td>{questionsData.url.split('/')[5]}</td> */}\r\n                                    <td>{questionsData.id}</td>\r\n                                    <td >{index === this.state.currentElement ? <input type='text' class=\"form-control\" onChange={(e) => { this.handleQuetionName(e) }} defaultValue={questionsData.description} /> : questionsData.description}</td>\r\n                                    <td>{questionsData.questiontopic_name}</td>\r\n                                    <td>{questionsData.questiontype_name}</td>\r\n\r\n     <td>\r\n    <select className=\"form-control\" disabled={!(index === this.state.currentElement)}>\r\n    {this.state.complexDropdownData.map((drpData,index)=>{\r\n      \r\n               return(\r\n                <option key={index} selected={drpData.name === questionsData.questioncomplexity_name} value={drpData.name === questionsData.questioncomplexity_name ? true : false}>{ drpData.name}</option>\r\n               )\r\n            \r\n       })}</select>\r\n    </td>\r\n\r\n                                    {/* <td>{index === this.state.currentElement ? <input type='text' class=\"form-control\" onChange={(e) => { this.handleQuetionComplexity(e) }} defaultValue={questionsData.questioncomplexity_name} /> : questionsData.questioncomplexity_name}</td> */}\r\n                                    <td>\r\n                                        <label className=\"switch\" id=\"status\">\r\n                                            <input type=\"checkbox\" checked={questionsData.status=== 1 ? true : false} disabled = {this.state.currentElement === index?false:true} onChange={() => this.handleStatus(questionsData, questionsData.status, index)} />\r\n                                            <span className=\"slider round\"></span>\r\n                                        </label>\r\n                                    </td> \r\n                                    {/* <td><label class=\"switch\" id=\"status\"><input type=\"checkbox\" /><span class=\"slider round\"></span></label></td> */}\r\n                                    <td>\r\n                                        <div >  {index === this.state.currentElement ? <svg onClick={() => { this.handleSave(index,questionsData) }} xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\" viewBox=\"0 0 18 18\"><path d=\"M6.61 11.89L3.5 8.78 2.44 9.84 6.61 14l8.95-8.95L14.5 4z\" /></svg> : <svg onClick={() => { this.handleEdit(questionsData, index) }} xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\" /></svg>}</div>\r\n                                    </td>\r\n                                </tr>\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n  }\r\n}\r\nexport default Questions;"]},"metadata":{},"sourceType":"module"}