{"ast":null,"code":"import _classCallCheck from \"F:\\\\React JS\\\\ReactJS\\\\capability\\\\capability25\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\React JS\\\\ReactJS\\\\capability\\\\capability25\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\React JS\\\\ReactJS\\\\capability\\\\capability25\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\React JS\\\\ReactJS\\\\capability\\\\capability25\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\React JS\\\\ReactJS\\\\capability\\\\capability25\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"F:\\\\React JS\\\\ReactJS\\\\capability\\\\capability25\\\\src\\\\components\\\\questions.js\";\nimport React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport axios from 'axios';\nimport Menu from './menu';\nimport './questions.css';\n\nvar Questions =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Questions, _Component);\n\n  function Questions(props) {\n    var _this;\n\n    _classCallCheck(this, Questions);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Questions).call(this, props));\n    _this.state = {\n      isLoaded: false,\n      id: '',\n      error: false,\n      description: '',\n      questiontype_name: '',\n      questioncomplexity_name: '',\n      status: 0,\n      Record: {\n        id: '',\n        description: '',\n        questiontype_name: '',\n        questioncomplexity_name: '',\n        status: ''\n      },\n      questionsDatas: [],\n      currentElement: -1\n    };\n    return _this;\n  }\n\n  _createClass(Questions, [{\n    key: \"handleEdit\",\n    value: function handleEdit(data, id) {\n      this.setState({\n        id: data.id,\n        description: data.description,\n        questiontype_name: data.questiontype_name,\n        questioncomplexity_name: data.questioncomplexity_name,\n        currentElement: id\n      });\n    }\n  }, {\n    key: \"handleStatus\",\n    value: function handleStatus(data, status, index) {\n      var dummyRecord = this.state.Record;\n      dummyRecord.name = data.name;\n      dummyRecord.acronym = data.acronym;\n      dummyRecord.status = status === 0 ? 1 : 0;\n      var dummyquestionsata = this.state.complexData;\n      dummycomplexData[index] = dummyRecord;\n      this.setState({\n        complexData: dummycomplexData,\n        status: status === 0 ? 1 : 0,\n        RecordsData: {\n          name: '',\n          acronym: '',\n          status: ''\n        }\n      });\n      alert(JSON.stringify(this.state.complexData));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Menu, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        class: \"side-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"button\",\n        id: \"btn\",\n        value: \"add question\",\n        class: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        to: \"/menu/questionsPage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Add Question\"))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        class: \"alert\",\n        style: {\n          display: this.state.error === true ? 'block' : 'none'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        class: \"closebtn\",\n        onClick: function onClick() {\n          _this2.handleClick();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"\\xD7\"), React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Please Enter Details....\")), React.createElement(\"div\", {\n        class: \"image-container\",\n        style: {\n          display: this.state.isLoaded === false ? 'block' : 'none'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"image-holder\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: require('./12345.gif'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        id: \"tblQues\",\n        className: \"table\",\n        style: {\n          display: this.state.isLoaded === true ? 'inline-table' : 'none'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        className: \"thead-bg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"S.No\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Questions\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Type\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Complexity\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Status\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Action\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, this.state.questionsDatas.map(function (questionsData, index) {\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, questionsData.id), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, index === _this2.state.currentElement ? React.createElement(\"input\", {\n          type: \"text\",\n          class: \"form-control\",\n          onChange: function onChange(e) {\n            _this2.handleQuetionName(e);\n          },\n          defaultValue: questionsData.description,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }) : questionsData.description), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, questionsData.questiontype_name), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, index === _this2.state.currentElement ? React.createElement(\"input\", {\n          type: \"text\",\n          class: \"form-control\",\n          onChange: function onChange(e) {\n            _this2.handleQuetionComplexity(e);\n          },\n          defaultValue: questionsData.questioncomplexity_name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }) : questionsData.questioncomplexity_name), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          className: \"switch\",\n          id: \"status\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"checkbox\",\n          checked: questionsData.status === 0 ? true : false,\n          disabled: _this2.state.editElement === index ? false : true,\n          onChange: function onChange() {\n            return _this2.handleStatus(questionsData, questionsData.status, index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          className: \"slider round\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }))), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, \"  \", index === _this2.state.currentElement ? React.createElement(\"svg\", {\n          onClick: function onClick() {\n            _this2.handleSave(index, questionsData);\n          },\n          xmlns: \"http://www.w3.org/2000/svg\",\n          width: \"30\",\n          height: \"30\",\n          viewBox: \"0 0 18 18\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, React.createElement(\"path\", {\n          d: \"M6.61 11.89L3.5 8.78 2.44 9.84 6.61 14l8.95-8.95L14.5 4z\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        })) : React.createElement(\"svg\", {\n          onClick: function onClick() {\n            _this2.handleEdit(questionsData, index);\n          },\n          xmlns: \"http://www.w3.org/2000/svg\",\n          width: \"24\",\n          height: \"24\",\n          viewBox: \"0 0 24 24\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, React.createElement(\"path\", {\n          d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        })))));\n      })))))));\n    }\n  }]);\n\n  return Questions;\n}(Component);\n\nexport default Questions;","map":{"version":3,"sources":["F:\\React JS\\ReactJS\\capability\\capability25\\src\\components\\questions.js"],"names":["React","Component","NavLink","axios","Menu","Questions","props","state","isLoaded","id","error","description","questiontype_name","questioncomplexity_name","status","Record","questionsDatas","currentElement","data","setState","index","dummyRecord","name","acronym","dummyquestionsata","complexData","dummycomplexData","RecordsData","alert","JSON","stringify","display","handleClick","require","map","questionsData","e","handleQuetionName","handleQuetionComplexity","editElement","handleStatus","handleSave","handleEdit"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Menu from './menu';\r\nimport './questions.css';\r\n\r\nclass Questions extends Component {\r\nconstructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isLoaded:false,\r\n            id:'',\r\n             error:false,\r\n            description: '',\r\n            questiontype_name: '',\r\n            questioncomplexity_name: '',\r\n            status:0,\r\n            Record: {\r\n                id: '',\r\n                description: '',\r\n                questiontype_name: '',\r\n                questioncomplexity_name: '',\r\n                status: ''\r\n            },\r\n            questionsDatas: [],\r\n            currentElement: -1,\r\n        }\r\n     \r\n    }\r\n    handleEdit(data, id) {\r\n        this.setState({\r\n            id: data.id,\r\n            description: data.description,\r\n            questiontype_name: data. questiontype_name,\r\n            questioncomplexity_name: data.questioncomplexity_name,\r\n            currentElement: id\r\n        })\r\n    }\r\n\r\n    handleStatus(data, status, index) {\r\n        const dummyRecord = this.state.Record;\r\n        dummyRecord.name = data.name;\r\n        dummyRecord.acronym = data.acronym;\r\n        dummyRecord.status = status === 0 ? 1 : 0;\r\n        const dummyquestionsata = this.state.complexData;\r\n        dummycomplexData[index] = dummyRecord;\r\n        this.setState({\r\n          complexData: dummycomplexData,\r\n          status: status === 0 ? 1 : 0,\r\n          RecordsData: {\r\n            name: '',\r\n            acronym: '',\r\n            status: ''\r\n          }\r\n        });\r\n        alert(JSON.stringify(this.state.complexData));\r\n      }\r\n    render() {\r\n      \r\n        return (\r\n            \r\n            <div>\r\n                <Menu />\r\n                <div class=\"side-content\">\r\n                <div>\r\n                    <br />\r\n                    <button type=\"button\" id=\"btn\" value=\"add question\" class=\"btn btn-primary\" ><NavLink to='/menu/questionsPage'>Add Question</NavLink></button>\r\n                </div>\r\n                <br />\r\n                <div class=\"alert\" style={{display: this.state.error === true ? 'block':'none'}}>\r\n                    <span class=\"closebtn\" onClick={()=>{this.handleClick()}}>&times;</span>\r\n                    <strong>Please Enter Details....</strong>\r\n                  </div>\r\n      \r\n                <div class=\"image-container\" style={{ display: this.state.isLoaded === false ? 'block' : 'none' }}>\r\n          <p className=\"image-holder\">\r\n            <img  src={require('./12345.gif')}  />\r\n          </p>\r\n        </div>\r\n        <br />\r\n        <div className=\"card\">\r\n        <div className=\"card-body\">\r\n                    <table id=\"tblQues\" className=\"table\" style={{display: this.state.isLoaded === true ? 'inline-table' : 'none'}} >\r\n                        <thead className=\"thead-bg\">\r\n                            <tr>\r\n                                <th>S.No</th><th>Questions</th><th>Type</th>\r\n                                <th>Complexity</th><th>Status</th><th>Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody >\r\n                            {this.state.questionsDatas.map((questionsData, index) => {\r\n                                return <tr>\r\n                                    {/* <td>{questionsData.url.split('/')[5]}</td> */}\r\n                                    <td>{questionsData.id}</td>\r\n                                    <td >{index === this.state.currentElement ? <input type='text' class=\"form-control\" onChange={(e) => { this.handleQuetionName(e) }} defaultValue={questionsData.description} /> : questionsData.description}</td>\r\n                                    {/* <td>{index === this.state.currentElement ? <input type='text' class=\"form-control\" onChange={(e) => { this.handleQuetionType(e) }} defaultValue={questionsData.questiontype_name} /> : questionsData.questiontype_name}</td> */}\r\n                                    <td>{questionsData.questiontype_name}</td>\r\n                                    <td>{index === this.state.currentElement ? <input type='text' class=\"form-control\" onChange={(e) => { this.handleQuetionComplexity(e) }} defaultValue={questionsData.questioncomplexity_name} /> : questionsData.questioncomplexity_name}</td>\r\n                                      <td>\r\n                                        <label className=\"switch\" id=\"status\">\r\n                <input type=\"checkbox\"  checked={questionsData.status=== 0 ?true : false} disabled = {this.state.editElement === index?false:true} onChange={() => this.handleStatus(questionsData, questionsData.status, index)}/>\r\n                <span className=\"slider round\" />\r\n              </label>\r\n                                    </td> \r\n                                    {/* <td><label class=\"switch\" id=\"status\"><input type=\"checkbox\" /><span class=\"slider round\"></span></label></td>*/}\r\n                                    <td> \r\n                                        <div >  {index === this.state.currentElement ? <svg onClick={() => { this.handleSave(index,questionsData) }} xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\" viewBox=\"0 0 18 18\"><path d=\"M6.61 11.89L3.5 8.78 2.44 9.84 6.61 14l8.95-8.95L14.5 4z\" /></svg> : <svg onClick={() => { this.handleEdit(questionsData, index) }} xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\" /></svg>}</div>\r\n                                    </td>\r\n                                </tr>\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Questions;"]},"metadata":{},"sourceType":"module"}