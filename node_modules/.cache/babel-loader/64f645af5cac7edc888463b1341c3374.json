{"ast":null,"code":"import _defineProperty from \"F:\\\\React JS\\\\ReactJS\\\\capability\\\\capability25\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"F:\\\\React JS\\\\ReactJS\\\\capability\\\\capability25\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\React JS\\\\ReactJS\\\\capability\\\\capability25\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\React JS\\\\ReactJS\\\\capability\\\\capability25\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\React JS\\\\ReactJS\\\\capability\\\\capability25\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\React JS\\\\ReactJS\\\\capability\\\\capability25\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"F:\\\\React JS\\\\ReactJS\\\\capability\\\\capability25\\\\src\\\\components\\\\questions.js\";\nimport React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport questionsMainData from \"../services/questions.json\";\nimport Menu from './menu';\n\nvar Questions =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Questions, _Component);\n\n  function Questions(props) {\n    var _this;\n\n    _classCallCheck(this, Questions);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Questions).call(this, props));\n    _this.state = {\n      id: '',\n      questionName: '',\n      questionType: '',\n      questionComplexity: '',\n      Record: {\n        id: '',\n        questionName: '',\n        questionType: '',\n        questionComplexity: ''\n      },\n      questionsDatas: questionsMainData,\n      currentElement: -1\n    };\n    return _this;\n  }\n\n  _createClass(Questions, [{\n    key: \"handleEdit\",\n    value: function handleEdit(data, id) {\n      this.setState({\n        id: data.id,\n        questionName: data.questionName,\n        questionType: data.questionType,\n        questionComplexity: data.questionComplexity,\n        currentElement: id\n      });\n    }\n  }, {\n    key: \"handleSave\",\n    value: function handleSave(index) {\n      var RecordDummy = this.state.Record;\n      RecordDummy.id = this.state.id;\n      RecordDummy.questionName = this.state.questionName;\n      RecordDummy.questionType = this.state.questionType;\n      RecordDummy.questionComplexity = this.state.questionComplexity;\n      var questionsDatasDummy = this.state.questionsDatas;\n      questionsDatasDummy[index] = RecordDummy; // Make a backend call with RecordDummy\n\n      this.setState(_defineProperty({\n        Record: RecordDummy,\n        questionsDatas: questionsDatasDummy,\n        currentElement: -1,\n        id: '',\n        questionName: '',\n        questionType: '',\n        questionComplexity: ''\n      }, \"Record\", {\n        id: '',\n        questionName: '',\n        questionType: '',\n        questionComplexity: ''\n      }));\n    }\n  }, {\n    key: \"handleQuetionName\",\n    value: function handleQuetionName(e) {\n      this.setState({\n        questionName: e.target.value\n      });\n    }\n  }, {\n    key: \"handleQuetionType\",\n    value: function handleQuetionType(e) {\n      this.setState({\n        questionType: e.target.value\n      });\n    }\n  }, {\n    key: \"handleQuetionComplexity\",\n    value: function handleQuetionComplexity(e) {\n      this.setState({\n        questionComplexity: e.target.value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Menu, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"button\",\n        id: \"btn\",\n        value: \"add question\",\n        class: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        to: \"/questionsPage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Add Question\"))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        id: \"tblQues\",\n        class: \"table table-bordered table-striped text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        class: \"thead-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"S.No\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Questions\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Type\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Complexity\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Status\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Action\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, this.state.questionsDatas.map(function (questionsData, index) {\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, questionsData.id), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, index === _this2.state.currentElement ? React.createElement(\"input\", {\n          type: \"text\",\n          class: \"form-control\",\n          onChange: function onChange(e) {\n            _this2.handleQuetionName(e);\n          },\n          defaultValue: questionsData.questionName,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }) : questionsData.questionName), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, index === _this2.state.currentElement ? React.createElement(\"input\", {\n          type: \"text\",\n          class: \"form-control\",\n          onChange: function onChange(e) {\n            _this2.handleQuetionType(e);\n          },\n          defaultValue: questionsData.questionType,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }) : questionsData.questionType), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, index === _this2.state.currentElement ? React.createElement(\"input\", {\n          type: \"text\",\n          class: \"form-control\",\n          onChange: function onChange(e) {\n            _this2.handleQuetionComplexity(e);\n          },\n          defaultValue: questionsData.questionComplexity,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }) : questionsData.questionComplexity), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          class: \"switch\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"checkbox\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          class: \"slider round\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }))), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, \"  \", index === _this2.state.currentElement ? React.createElement(\"svg\", {\n          onClick: function onClick() {\n            _this2.handleSave(index);\n          },\n          xmlns: \"http://www.w3.org/2000/svg\",\n          width: \"30\",\n          height: \"30\",\n          viewBox: \"0 0 18 18\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, React.createElement(\"path\", {\n          d: \"M6.61 11.89L3.5 8.78 2.44 9.84 6.61 14l8.95-8.95L14.5 4z\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        })) : React.createElement(\"svg\", {\n          onClick: function onClick() {\n            _this2.handleEdit(questionsData, index);\n          },\n          xmlns: \"http://www.w3.org/2000/svg\",\n          width: \"24\",\n          height: \"24\",\n          viewBox: \"0 0 24 24\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, React.createElement(\"path\", {\n          d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        })))));\n      })))));\n    }\n  }]);\n\n  return Questions;\n}(Component);\n\nexport default Questions;","map":{"version":3,"sources":["F:\\React JS\\ReactJS\\capability\\capability25\\src\\components\\questions.js"],"names":["React","Component","NavLink","questionsMainData","Menu","Questions","props","state","id","questionName","questionType","questionComplexity","Record","questionsDatas","currentElement","data","setState","index","RecordDummy","questionsDatasDummy","e","target","value","map","questionsData","handleQuetionName","handleQuetionType","handleQuetionComplexity","handleSave","handleEdit"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport { NavLink } from 'react-router-dom';\r\nimport questionsMainData from \"../services/questions.json\"\r\nimport Menu from './menu';\r\n\r\nclass Questions extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id: '',\r\n            questionName: '',\r\n            questionType: '',\r\n            questionComplexity: '',\r\n            Record: {\r\n                id: '',\r\n                questionName: '',\r\n                questionType: '',\r\n                questionComplexity: ''\r\n            },\r\n            questionsDatas: questionsMainData,\r\n            currentElement: -1,\r\n        }\r\n    }\r\n    handleEdit(data, id) {\r\n        this.setState({\r\n            id: data.id,\r\n            questionName: data.questionName,\r\n            questionType: data.questionType,\r\n            questionComplexity: data.questionComplexity,\r\n            currentElement: id\r\n        })\r\n    }\r\n\r\n    handleSave(index) {\r\n        var RecordDummy = this.state.Record;\r\n        RecordDummy.id = this.state.id;\r\n        RecordDummy.questionName = this.state.questionName;\r\n        RecordDummy.questionType = this.state.questionType;\r\n        RecordDummy.questionComplexity = this.state.questionComplexity;\r\n        var questionsDatasDummy = this.state.questionsDatas;\r\n        questionsDatasDummy[index] = RecordDummy;\r\n        // Make a backend call with RecordDummy\r\n        this.setState({\r\n            Record: RecordDummy,\r\n            questionsDatas: questionsDatasDummy,\r\n            currentElement: -1,\r\n            id: '',\r\n            questionName: '',\r\n            questionType: '',\r\n            questionComplexity: '',\r\n            Record: {\r\n                id: '',\r\n                questionName: '',\r\n                questionType: '',\r\n                questionComplexity: ''\r\n            }\r\n        })\r\n    }\r\n\r\n    handleQuetionName(e) {\r\n        this.setState({\r\n            questionName: e.target.value\r\n        });\r\n    }\r\n\r\n    handleQuetionType(e) {\r\n        this.setState({\r\n            questionType: e.target.value\r\n        });\r\n    }\r\n\r\n    handleQuetionComplexity(e) {\r\n        this.setState({\r\n            questionComplexity: e.target.value\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Menu />\r\n                <div>\r\n                    <br />\r\n                    <button type=\"button\" id=\"btn\" value=\"add question\" class=\"btn btn-primary\" ><NavLink to='/questionsPage'>Add Question</NavLink></button>\r\n                </div>\r\n                <br />\r\n                <br />\r\n                <div>\r\n                    <table id=\"tblQues\" class=\"table table-bordered table-striped text-center\">\r\n                        <thead class=\"thead-light\">\r\n                            <tr>\r\n                                <th>S.No</th><th>Questions</th><th>Type</th>\r\n                                <th>Complexity</th><th>Status</th><th>Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.state.questionsDatas.map((questionsData, index) => {\r\n                                return <tr>\r\n                                    <td>{questionsData.id}</td>\r\n                                    <td >{index === this.state.currentElement ? <input type='text' class=\"form-control\" onChange={(e) => { this.handleQuetionName(e) }} defaultValue={questionsData.questionName} /> : questionsData.questionName}</td>\r\n                                    <td>{index === this.state.currentElement ? <input type='text' class=\"form-control\" onChange={(e) => { this.handleQuetionType(e) }} defaultValue={questionsData.questionType} /> : questionsData.questionType}</td>\r\n                                    <td>{index === this.state.currentElement ? <input type='text' class=\"form-control\" onChange={(e) => { this.handleQuetionComplexity(e) }} defaultValue={questionsData.questionComplexity} /> : questionsData.questionComplexity}</td>\r\n                                    <td>\r\n                                        <label class=\"switch\">\r\n                                            <input type=\"checkbox\" />\r\n                                            <span class=\"slider round\"></span>\r\n                                        </label>\r\n                                    </td>\r\n                                    <td>\r\n                                        <div >  {index === this.state.currentElement ? <svg onClick={() => { this.handleSave(index) }} xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\" viewBox=\"0 0 18 18\"><path d=\"M6.61 11.89L3.5 8.78 2.44 9.84 6.61 14l8.95-8.95L14.5 4z\" /></svg> : <svg onClick={() => { this.handleEdit(questionsData, index) }} xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\" /></svg>}</div>\r\n                                    </td>\r\n                                </tr>\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Questions;"]},"metadata":{},"sourceType":"module"}