{"ast":null,"code":"import _classCallCheck from \"C:\\\\capabilityApp\\\\deployCap\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\capabilityApp\\\\deployCap\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\capabilityApp\\\\deployCap\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\capabilityApp\\\\deployCap\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\capabilityApp\\\\deployCap\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\capabilityApp\\\\deployCap\\\\src\\\\components\\\\dashboard\\\\dashboard.js\";\nimport React, { Component } from 'react';\nimport './dashboard.css';\nimport Menu from '../menu/menu';\nimport { Redirect, NavLink } from 'react-router-dom';\nimport axios from 'axios';\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dashboard, _Component);\n\n  function Dashboard(props) {\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dashboard).call(this, props));\n    _this.state = {\n      topicData: [],\n      isLoaded: false\n    };\n    return _this;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      if (localStorage.getItem('isLoggedIn') != null) {\n        axios.get(\"http://127.0.0.1:8000/questions/topic/\").then(function (response) {\n          console.log(response.data);\n          var topicData = response.data;\n\n          _this2.setState({\n            topicData: topicData,\n            isLoaded: true\n          });\n        });\n      }\n    }\n  }, {\n    key: \"handleTile\",\n    value: function handleTile(tile) {\n      this.props.history.push(\"/menu/questions?id=\".concat(tile));\n    } //  componentWillMount(){\n    //   const receivedData=localStorage.getItem(JSON.stringify(isLoggedin)); \n    //      if(!receivedData){\n    //         this.props.history.push(\"/\")\n    //      } \n    //  }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var topicData = this.state.topicData;\n\n      if (localStorage.getItem('isLoggedIn') === null) {\n        return React.createElement(Redirect, {\n          to: \"/login\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, React.createElement(Menu, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }), React.createElement(\"main\", {\n          className: \"grid\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, topicData.map(function (topic) {\n          var tname = topic.name;\n          return React.createElement(NavLink, {\n            onClick: function onClick() {\n              return _this3.handleTile(tname);\n            },\n            className: \"tiles\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"tiles\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            class: \"image\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            src: require('.././img1.jpg'),\n            alt: \"Sample photo\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57\n            },\n            __self: this\n          }), React.createElement(\"h2\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58\n            },\n            __self: this\n          }, topic.name))));\n        })));\n      }\n    }\n  }]);\n\n  return Dashboard;\n}(Component);\n\nexport default Dashboard;","map":{"version":3,"sources":["C:\\capabilityApp\\deployCap\\src\\components\\dashboard\\dashboard.js"],"names":["React","Component","Menu","Redirect","NavLink","axios","Dashboard","props","state","topicData","isLoaded","localStorage","getItem","get","then","response","console","log","data","setState","tile","history","push","map","topic","tname","name","handleTile","require"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAO,iBAAP;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,SAAQC,QAAR,EAAiBC,OAAjB,QAA+B,kBAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;IAEMC,S;;;;;AACJ,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,mFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAC,EADC;AAEXC,MAAAA,QAAQ,EAAC;AAFE,KAAb;AAFiB;AAMlB;;;;yCACoB;AAAA;;AACnB,UAAIC,YAAY,CAACC,OAAb,CAAqB,YAArB,KAAsC,IAA1C,EAAgD;AAChDP,QAAAA,KAAK,CAACQ,GAAN,CAAU,wCAAV,EACGC,IADH,CACQ,UAAAC,QAAQ,EAAI;AAChBC,UAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACA,cAAMT,SAAS,GAAGM,QAAQ,CAACG,IAA3B;;AACA,UAAA,MAAI,CAACC,QAAL,CAAc;AACZV,YAAAA,SAAS,EAACA,SADE;AAEZC,YAAAA,QAAQ,EAAE;AAFE,WAAd;AAID,SARH;AASD;AACF;;;+BAEUU,I,EAAM;AACf,WAAKb,KAAL,CAAWc,OAAX,CAAmBC,IAAnB,8BAA8CF,IAA9C;AACD,K,CAEG;AACA;AACA;AACA;AACA;AACA;;;;6BACQ;AAAA;;AAAA,UACCX,SADD,GACY,KAAKD,KADjB,CACCC,SADD;;AAEJ,UAAIE,YAAY,CAACC,OAAb,CAAqB,YAArB,MAAuC,IAA3C,EAAiD;AAC7C,eAAO,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAFH,MAGI;AACH,eAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACJ,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADI,EAEJ;AAAM,UAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEEH,SAAS,CAACc,GAAV,CAAc,UAAAC,KAAK,EAAG;AACtB,cAAMC,KAAK,GAAED,KAAK,CAACE,IAAnB;AACA,iBACI,oBAAC,OAAD;AAAS,YAAA,OAAO,EAAI;AAAA,qBAAM,MAAI,CAACC,UAAL,CAAgBF,KAAhB,CAAN;AAAA,aAApB;AAAkD,YAAA,SAAS,EAAC,OAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAK,YAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACA;AAAK,YAAA,KAAK,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACZ;AAAK,YAAA,GAAG,EAAEG,OAAO,CAAC,eAAD,CAAjB;AAAoC,YAAA,GAAG,EAAC,cAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADY,EAEV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAKJ,KAAK,CAACE,IAAX,CAFU,CADA,CADF,CADJ;AAaA,SAfA,CAFF,CAFI,CAFH;AAiFJ;AACS;;;;EAxHUzB,S;;AA2HxB,eAAeK,SAAf","sourcesContent":["import React,{Component} from 'react';\r\nimport './dashboard.css';\r\nimport Menu from '../menu/menu';\r\nimport {Redirect,NavLink} from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nclass Dashboard extends Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      topicData:[],\r\n      isLoaded:false\r\n    }\r\n  }\r\n  componentWillMount() {\r\n    if (localStorage.getItem('isLoggedIn') != null) {\r\n    axios.get(\"http://127.0.0.1:8000/questions/topic/\")\r\n      .then(response => {\r\n        console.log(response.data);\r\n        const topicData = response.data;\r\n        this.setState({\r\n          topicData:topicData,\r\n          isLoaded: true\r\n        })\r\n      })\r\n  }\r\n}    \r\n\r\nhandleTile(tile) {\r\n  this.props.history.push(`/menu/questions?id=${tile}`)\r\n}\r\n\r\n    //  componentWillMount(){\r\n    //   const receivedData=localStorage.getItem(JSON.stringify(isLoggedin)); \r\n    //      if(!receivedData){\r\n    //         this.props.history.push(\"/\")\r\n    //      } \r\n    //  }\r\n    render(){\r\n      const {topicData}=this.state;\r\n        if (localStorage.getItem('isLoggedIn') === null) {\r\n            return <Redirect to='/login' />\r\n          }\r\n        else{\r\n         return(\r\n\r\n            <div >\r\n        <Menu />\r\n        <main className=\"grid\">\r\n        {          \r\n          topicData.map(topic =>{\r\n          const tname= topic.name\r\n          return   (            \r\n              <NavLink onClick = {() => this.handleTile(tname)} className=\"tiles\" >\r\n                <div className=\"tiles\">\r\n                <div class=\"image\">\r\n    <img src={require('.././img1.jpg')} alt=\"Sample photo\" />\r\n      <h2>{topic.name}</h2>\r\n    </div>           \r\n    {/* <div className=\"text\">\r\n        <button>{topic.name}</button>\r\n   </div> */}\r\n          </div>    \r\n              </NavLink>          \r\n             )\r\n         })\r\n         \r\n        } \r\n        </main>\r\n      {/* <div className=\"dashoardImg\">     \r\n         <h2>Welcome to Capability Test App</h2> \r\n        </div>  */}\r\n    {/* <main className=\"grid\">\r\n        <NavLink to='/menu/questions' className=\"tiles\" >\r\n  <div className=\"tiles\">\r\n    <img src={require('.././sql2.png')} alt=\"Sample photo\" />\r\n    <div className=\"text\">\r\n    <button>SQL</button>\r\n    </div>\r\n    </div>    \r\n </NavLink>\r\n <NavLink to='/menu/questions' className=\"tiles\" >\r\n  <div className=\"tiles\">\r\n    <img src={require('.././sql2.png')} alt=\"Sample photo\" />\r\n    <div className=\"text\">\r\n    <button>SQL</button>\r\n    </div>\r\n    </div>    \r\n </NavLink>\r\n <NavLink to='/menu/questions' className=\"tiles\" >\r\n  <div className=\"tiles\">\r\n    <img src={require('.././sql2.png')} alt=\"Sample photo\" />\r\n    <div className=\"text\">\r\n    <button>SQL</button>\r\n    </div>\r\n    </div>    \r\n </NavLink>\r\n <NavLink to='/menu/questions' className=\"tiles\" >\r\n  <div className=\"tiles\">\r\n    <img src={require('.././sql2.png')} alt=\"Sample photo\" />\r\n    <div className=\"text\">\r\n    <button>SQL</button>\r\n    </div>\r\n    </div>    \r\n </NavLink>\r\n <NavLink to='/menu/questions' className=\"tiles\" >\r\n  <div className=\"tiles\">\r\n    <img src={require('.././sql2.png')} alt=\"Sample photo\" />\r\n    <div className=\"text\">\r\n    <button>SQL</button>\r\n    </div>\r\n    </div>\r\n     </NavLink>\r\n     <NavLink to='/menu/questions' className=\"tiles\" >\r\n  <div className=\"tiles\">\r\n    <img src={require('.././sql2.png')} alt=\"Sample photo\" />\r\n    <div className=\"text\">\r\n    <button>SQL</button>\r\n    </div>\r\n    </div>    \r\n </NavLink>\r\n \r\n </main> */}\r\n</div>   \r\n    )\r\n    }\r\n             }\r\n \r\n}\r\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}