{"ast":null,"code":"import _classCallCheck from \"F:\\\\React JS\\\\ReactJS\\\\capability\\\\capability25\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\React JS\\\\ReactJS\\\\capability\\\\capability25\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\React JS\\\\ReactJS\\\\capability\\\\capability25\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\React JS\\\\ReactJS\\\\capability\\\\capability25\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\React JS\\\\ReactJS\\\\capability\\\\capability25\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"F:\\\\React JS\\\\ReactJS\\\\capability\\\\capability25\\\\src\\\\components\\\\editQuestions\\\\editQuestions.js\";\nimport React, { Component } from 'react';\nimport Menu from '../menu/menu';\nimport { Redirect } from 'react-router-dom';\nimport axios from 'axios';\n\nvar editQuestions =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(editQuestions, _Component);\n\n  // componentDidMount () {\n  //      document.body.style = 'background: #e9ecef;';\n  //     //alert(this.props.location.state.userId);\n  //    }    \n  function editQuestions(props) {\n    var _this;\n\n    _classCallCheck(this, editQuestions);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(editQuestions).call(this, props));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(editQuestions, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      if (localStorage.getItem('isLoggedIn') != null) {\n        var idData = this.props.location.search;\n        var idvalue = idData.split(\"?id=\");\n        var id = idvalue.slice(1, 3);\n        console.log(id[0]);\n        axios.get(\"http://127.0.0.1:8000/questions/editquestionchoiceans/\".concat(id[0], \"/\")).then(function (response) {\n          console.log(response.data);\n          var editQuesData = response.data;\n\n          _this2.setState({\n            editQuesData: editQuesData,\n            isLoaded: true\n          });\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (localStorage.getItem('isLoggedIn') === null) {\n        return React.createElement(Redirect, {\n          to: \"/login\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, React.createElement(Menu, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"image-container\",\n          style: {\n            display: this.state.isLoaded === false ? 'block' : 'none'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"image-holder\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: require('.././12345.gif'),\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }))), React.createElement(\"table\", {\n          id: \"tblPage\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, React.createElement(\"tbody\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, \"Select Topic\"), React.createElement(\"select\", {\n          className: \"form-control\",\n          onChange: this.handleTopicDropdown,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, \"--select--\"), this.state.topicData.map(function (topic) {\n          return React.createElement(\"option\", {\n            key: topic.id,\n            value: topic.acronym,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56\n            },\n            __self: this\n          }, topic.name);\n        }))), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, \"Select Complexity\"), React.createElement(\"select\", {\n          className: \"form-control\",\n          disabled: this.state.topicDropdownValue === \"--Select--\",\n          onChange: this.handleComplexityDropdown,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, \"--Select--\"), this.state.complexData.map(function (complex) {\n          return React.createElement(\"option\", {\n            key: complex.id,\n            value: complex.acronym,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67\n            },\n            __self: this\n          }, complex.name);\n        }))), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, \"Select Type\"), React.createElement(\"select\", {\n          className: \"form-control\",\n          id: \"drpType\",\n          disabled: this.state.complexityDropdownValue === \"--Select--\",\n          onChange: this.handleTypeDropdown,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, \"--Select--\"), this.state.typeData.map(function (type) {\n          return React.createElement(\"option\", {\n            key: type.id,\n            value: type.acronym,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77\n            },\n            __self: this\n          }, type.name);\n        }))))))) //    </div>\n        ;\n      }\n    }\n  }]);\n\n  return editQuestions;\n}(Component);\n\nexport default editQuestions;","map":{"version":3,"sources":["F:\\React JS\\ReactJS\\capability\\capability25\\src\\components\\editQuestions\\editQuestions.js"],"names":["React","Component","Menu","Redirect","axios","editQuestions","props","state","localStorage","getItem","idData","location","search","idvalue","split","id","slice","console","log","get","then","response","data","editQuesData","setState","isLoaded","display","require","handleTopicDropdown","topicData","map","topic","acronym","name","topicDropdownValue","handleComplexityDropdown","complexData","complex","complexityDropdownValue","handleTypeDropdown","typeData","type"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Menu from '../menu/menu';\r\nimport {Redirect} from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nclass editQuestions extends Component {\r\n    // componentDidMount () {\r\n    //      document.body.style = 'background: #e9ecef;';\r\n    //     //alert(this.props.location.state.userId);\r\n        \r\n    //    }    \r\n    constructor(props){\r\n        super(props)\r\n        this.state ={\r\n            \r\n        }\r\n    }\r\n     componentWillMount() {           \r\n        if (localStorage.getItem('isLoggedIn') != null) { \r\n            const idData=this.props.location.search;\r\n            var idvalue =  idData.split(\"?id=\");  \r\n            var id = idvalue.slice(1, 3);\r\n            console.log(id[0]);\r\n            axios.get(`http://127.0.0.1:8000/questions/editquestionchoiceans/${id[0]}/`)\r\n            .then(response => {\r\n              console.log(response.data);\r\n              const editQuesData = response.data;\r\n              this.setState({\r\n                editQuesData,\r\n                isLoaded: true\r\n              })\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        if (localStorage.getItem('isLoggedIn') === null) {\r\n            return <Redirect to='/login' />\r\n          }else{\r\n        return (\r\n            <div >\r\n            <Menu />\r\n           {/* <div className=\"side-content\"> */}\r\n           <div className=\"image-container\" style={{ display: this.state.isLoaded === false ? 'block' : 'none' }}>\r\n          <p className=\"image-holder\">\r\n            <img src={require('.././12345.gif')} alt=\"\" />\r\n          </p>\r\n        </div>\r\n        <table id=\"tblPage\" > \r\n<tbody>\r\n                    <tr><td>\r\n                        <label>Select Topic</label>\r\n                        <select className=\"form-control\" onChange={this.handleTopicDropdown}> \r\n                        <option>--select--</option>\r\n                        {\r\n                            this.state.topicData.map(topic => (\r\n                                <option key={topic.id} value={topic.acronym}>{topic.name}</option>\r\n                            ))\r\n                        }\r\n                        </select>\r\n                    </td>\r\n                        <td>\r\n                            <label>Select Complexity</label>\r\n                            <select className=\"form-control\" disabled={this.state.topicDropdownValue === \"--Select--\"} onChange={this.handleComplexityDropdown}>\r\n                                <option>--Select--</option>\r\n                                {this.state.complexData.map(complex=>\r\n                                  (\r\n                                        <option key={complex.id} value={complex.acronym}>{complex.name}</option>\r\n                                    )\r\n                                )}\r\n\r\n                            </select ></td>\r\n                        <td>\r\n                            <label>Select Type</label>\r\n                            <select className=\"form-control\" id=\"drpType\" disabled={this.state.complexityDropdownValue === \"--Select--\"} onChange={this.handleTypeDropdown}>\r\n                                <option>--Select--</option>\r\n                            {this.state.typeData.map(type=>(\r\n                                <option key={type.id} value={type.acronym}>{type.name}</option>\r\n                            ))}\r\n                                \r\n\r\n                            </select></td>\r\n                    </tr>\r\n                    \r\n                    </tbody>\r\n                </table>\r\n\r\n           </div>\r\n        //    </div>\r\n           \r\n        );\r\n    }\r\n    }\r\n}\r\n\r\nexport default editQuestions;"]},"metadata":{},"sourceType":"module"}